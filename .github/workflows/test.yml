name: Maven tests

on:
  pull_request:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - name: Set up JDK 21
        uses: actions/setup-java@6a0805fcefea3d4657a47ac4c165951e33482018 # v4
        with:
          java-version: '21'
          distribution: 'zulu'
          cache: maven

      - name: Run Maven tests
        run: |
          mvn clean install -DskipTests
          modules=("dubbo-common" 
                  "dubbo-serialization/dubbo-serialization-hessian2" 
                  "dubbo-serialization/dubbo-serialization-fastjson2" 
                  "dubbo-remoting/dubbo-remoting-api" 
                  "dubbo-metrics/dubbo-metrics-api" 
                  "dubbo-config/dubbo-config-api")
                  
          for module in "${modules[@]}"; do
            echo "Running tests for $module"
            mvn -B verify -Pjacoco -f $module/pom.xml
          done

      - name: Get JaCoCo Coverage
        id: coverage
        run: |
          {
            echo 'COVERAGE1<<coverage1'
            python3 config/coverage.py dubbo-common/target/site/jacoco/jacoco.csv
            echo coverage1
          } >> "$GITHUB_ENV"
          {
            echo 'COVERAGE2<<coverage2'
            python3 config/coverage.py dubbo-serialization/dubbo-serialization-hessian2/target/site/jacoco/jacoco.csv
            echo coverage2
          } >> "$GITHUB_ENV"
          {
            echo 'COVERAGE3<<coverage3'
            python3 config/coverage.py dubbo-serialization/dubbo-serialization-fastjson2/target/site/jacoco/jacoco.csv
            echo coverage3
          } >> "$GITHUB_ENV"
          {
            echo 'COVERAGE4<<coverage4'
            python3 config/coverage.py dubbo-remoting/dubbo-remoting-api/target/site/jacoco/jacoco.csv
            echo coverage4
          } >> "$GITHUB_ENV"
          {
            echo 'COVERAGE5<<coverage5'
            python3 config/coverage.py dubbo-metrics/dubbo-metrics-api/target/site/jacoco/jacoco.csv
            echo coverage5
          } >> "$GITHUB_ENV"
          {
            echo 'COVERAGE6<<coverage6'
            python3 config/coverage.py dubbo-config/dubbo-config-api/target/site/jacoco/jacoco.csv
            echo coverage6
          } >> "$GITHUB_ENV"

      - name: Fail if coverage has not improved.
        run: |
          coverage1=$COVERAGE1
          coverage2=$COVERAGE2
          coverage3=$COVERAGE3
          coverage4=$COVERAGE4
          coverage5=$COVERAGE5
          coverage6=$COVERAGE6
          threshold1=10.00
          threshold2=30.00
          threshold3=40.00
          threshold4=50.00
          threshold5=60.00
          threshold6=60.00

          if (( $(echo "$coverage1 >= $threshold1" | bc -l) )); then
            echo -e "New coverage for the module dubbo-common - $coverage\%. Coverage has improved!"
            exit 1
          elif (( $(echo "$coverage2 >= $threshold2" | bc -l) )); then
            echo -e "New coverage for the module dubbo-serialization-hessian2 - $coverage\%. Coverage has improved!"
            exit 1
          elif (( $(echo "$coverage3 >= $threshold3" | bc -l) )); then
            echo -e "New coverage for module dubbo-serialization-fastjson2 - $coverage\%. Coverage has improved!"
            exit 1
          elif (( $(echo "$coverage4 >= $threshold4" | bc -l) )); then
            echo -e "New coverage for module dubbo-remoting-api - $coverage\%. Coverage has improved!"
            exit 1
          elif (( $(echo "$coverage5 >= $threshold5" | bc -l) )); then
            echo -e "New coverage for module dubbo-metrics-api - $coverage\%. Coverage has improved!"
            exit 1
          elif (( $(echo "$coverage6 >= $threshold6" | bc -l) )); then
            echo -e "New coverage for module dubbo-config-api - $coverage\%. Coverage has improved!"
            exit 1
          else
            echo "Coverage is still equal to $threshold1%. Please improve."
          fi
